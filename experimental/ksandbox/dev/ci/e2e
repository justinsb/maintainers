#!/usr/bin/env bash

# Copyright 2025 The Kubernetes Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

set -o errexit
set -o nounset
set -o pipefail

REPO_ROOT="$(git rev-parse --show-toplevel)"
SRC_DIR=${REPO_ROOT}/experimental/ksandbox
cd "${SRC_DIR}"

BUILD_DIR=${SRC_DIR}/.build
mkdir -p "${BUILD_DIR}"

# Pick a probably-unique tag
export TAG=`date +%Y%m%d%H%M%S`

# Build the image
export IMAGE_PREFIX=fake.registry/
PUSH_FLAGS=--local dev/tasks/build-images

# Create a kind cluster
echo "Creating kind cluster"
kind create cluster --name ksandbox-ci

# Register a cleanup function to delete the cluster on exit
function cleanup() {
  echo "Deleting kind cluster"
  kind delete cluster --name ksandbox-ci
}
trap cleanup EXIT

# Set up kubeconfig
echo "Setting up kubeconfig"
kind export kubeconfig --name ksandbox-ci

# Load the image into kind
echo "Loading image into kind"
AGENT_IMAGE=$(cat .build/agent-image)
kind load docker-image --name ksandbox-ci ${AGENT_IMAGE}

# Wait for the cluster to be initialized
# We need the serviceaccount default/default to be created
echo "Waiting for serviceaccount default/default to be created"
kubectl wait --for=create serviceaccount/default -n default --timeout=300s

# Run the test client
# TODO: Replace with a real test written in Go
echo "Running test client"
TEST_RESULT=$(go run ./cmd/ksandbox-testclient/ --agent ${AGENT_IMAGE} --image golang:1.23.5 go version)

echo "Test result: ${TEST_RESULT}"

# Delete the kind cluster
echo "Deleting kind cluster"
kind delete cluster --name ksandbox-ci